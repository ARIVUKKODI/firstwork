{"ast":null,"code":"import _defineProperty from \"/home/vinov/code/firstwork/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/vinov/code/firstwork/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vinov/code/firstwork/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vinov/code/firstwork/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vinov/code/firstwork/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vinov/code/firstwork/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vinov/code/firstwork/src/App.js\";\nimport React from 'react';\nimport Axios from \"axios\";\nimport * as md5 from 'md5';\n\nvar MyForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyForm, _React$Component);\n\n  function MyForm(props) {\n    var _this;\n\n    _classCallCheck(this, MyForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyForm).call(this, props)); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    _this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n      city: '',\n      country: ''\n    };\n\n    var getEmailHash = function getEmailHash(email) {\n      return email && md5(email.trim().toLowerCase());\n    };\n\n    var getGravatarUrlFromHash = function getGravatarUrlFromHash(hash) {\n      var url = \"https://gravatar.com/avatar/\".concat(hash, \"?d=404\");\n      var instance = Axios.create();\n      return instance.get(url).then(function (response) {\n        if (response.config.url) {\n          return response.config.url;\n        } else {\n          throw new Error('not found');\n        }\n      }).catch(function (error) {\n        return Promise.resolve('not found');\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(MyForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          address = _this$state.address,\n          city = _this$state.city,\n          country = _this$state.country;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        placeholder: 'Enter your name',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        label: \"Email\",\n        name: \"email\",\n        value: email,\n        placeholder: 'Enter your Email',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: phone,\n        placeholder: 'Enter your phone number',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: address,\n        placeholder: 'Enter your Address',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        value: city,\n        placeholder: 'Enter your city',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        value: country,\n        placeholder: 'Enter your country',\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \" Submit \"), \" \");\n    }\n  }]);\n\n  return MyForm;\n}(React.Component);\n\nexport default MyForm;","map":{"version":3,"sources":["/home/vinov/code/firstwork/src/App.js"],"names":["React","Axios","md5","MyForm","props","state","name","email","phone","address","city","country","getEmailHash","trim","toLowerCase","getGravatarUrlFromHash","hash","url","instance","create","get","then","response","config","Error","catch","error","Promise","resolve","onChange","e","setState","target","value","onSubmit","preventDefault","handleSubmit","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,IAAI,EAAE,EALK;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAb;;AAWA,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAACL,KAAD,EAAmB;AACtC,aAAOA,KAAK,IAAIL,GAAG,CAACK,KAAK,CAACM,IAAN,GAAaC,WAAb,EAAD,CAAnB;AACD,KAFD;;AAIA,QAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAsC;AACnE,UAAMC,GAAG,yCAAkCD,IAAlC,WAAT;AACA,UAAME,QAAQ,GAAGjB,KAAK,CAACkB,MAAN,EAAjB;AACA,aAAOD,QAAQ,CAACE,GAAT,CAAaH,GAAb,EACJI,IADI,CACC,UAACC,QAAD,EAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,CAAgBN,GAApB,EAAyB;AACvB,iBAAOK,QAAQ,CAACC,MAAT,CAAgBN,GAAvB;AACD,SAFD,MAEO;AACL,gBAAM,IAAIO,KAAJ,CAAU,WAAV,CAAN;AACD;AACF,OAPI,EAQJC,KARI,CAQE,UAACC,KAAD,EAAW;AAChB,eAAOC,OAAO,CAACC,OAAR,CAAgB,WAAhB,CAAP;AACD,OAVI,CAAP;AAWD,KAdD;;AAgBA,UAAKC,QAAL,GAAgB,UAACC,CAAD,EAAO;AACrB,YAAKC,QAAL,qBACGD,CAAC,CAACE,MAAF,CAAS1B,IADZ,EACmBwB,CAAC,CAACE,MAAF,CAASC,KAD5B;AAGD,KAJD;;AAMA,UAAKC,QAAL,GAAgB,UAACJ,CAAD,EAAO;AACrBA,MAAAA,CAAC,CAACK,cAAF;AACD,KAFD;;AAxCiB;AA2ClB;;;;6BACQ;AAAA,wBAQH,KAAK9B,KARF;AAAA,UAELC,IAFK,eAELA,IAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,IANK,eAMLA,IANK;AAAA,UAOLC,OAPK,eAOLA,OAPK;AASP,aAAS;AACF,QAAA,QAAQ,EACX,KAAKyB,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIP;AACM,QAAA,IAAI,EAAG,MADb;AAEA,QAAA,IAAI,EAAG,MAFP;AAGA,QAAA,KAAK,EACH9B,IAJF;AAMA,QAAA,WAAW,EACT,iBAPF;AASA,QAAA,QAAQ,EACN,KAAKuB,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJO,OAgBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBI,EAkBP;AACM,QAAA,IAAI,EAAG,MADb;AAEA,QAAA,KAAK,EAAG,OAFR;AAGA,QAAA,IAAI,EAAG,OAHP;AAIA,QAAA,KAAK,EACHtB,KALF;AAOA,QAAA,WAAW,EACT,kBARF;AAUA,QAAA,QAAQ,EACN,KAAKsB,QAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBO,OA+BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BI,EAiCP;AACM,QAAA,IAAI,EAAG,MADb;AAEA,QAAA,IAAI,EAAG,OAFP;AAGA,QAAA,KAAK,EACHrB,KAJF;AAMA,QAAA,WAAW,EACT,yBAPF;AASA,QAAA,QAAQ,EACN,KAAKqB,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCO,OA6CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7CI,EA+CP;AACM,QAAA,IAAI,EAAG,MADb;AAEA,QAAA,IAAI,EAAG,SAFP;AAGA,QAAA,KAAK,EACHpB,OAJF;AAMA,QAAA,WAAW,EACT,oBAPF;AASA,QAAA,QAAQ,EACN,KAAKoB,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CO,OA2DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3DI,EA6DP;AACM,QAAA,IAAI,EAAG,MADb;AAEA,QAAA,IAAI,EAAG,MAFP;AAGA,QAAA,KAAK,EACHnB,IAJF;AAMA,QAAA,WAAW,EACT,iBAPF;AASA,QAAA,QAAQ,EACN,KAAKmB,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7DO,OAyEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzEI,EA2EP;AACM,QAAA,IAAI,EAAG,MADb;AAEA,QAAA,IAAI,EAAG,SAFP;AAGA,QAAA,KAAK,EACHlB,OAJF;AAMA,QAAA,WAAW,EACT,oBAPF;AASA,QAAA,QAAQ,EACN,KAAKkB,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3EO,OAuFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvFI,EAyFP;AACO,QAAA,IAAI,EAAG,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzFO,MAAT;AA6FD;;;;EAnJkB7B,KAAK,CAACqC,S;;AAqJ3B,eAAelC,MAAf","sourcesContent":["import React from 'react';\nimport Axios from \"axios\";\nimport * as md5 from 'md5';\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n      city: '',\n      country: ''\n    }\n\n\n\n    const getEmailHash = (email: string) => {\n      return email && md5(email.trim().toLowerCase());\n    }\n\n    const getGravatarUrlFromHash = (hash: string): Promise < string > => {\n      const url = `https://gravatar.com/avatar/${hash}?d=404`;\n      const instance = Axios.create();\n      return instance.get(url)\n        .then((response) => {\n          if (response.config.url) {\n            return response.config.url;\n          } else {\n            throw new Error('not found');\n          }\n        })\n        .catch((error) => {\n          return Promise.resolve('not found');\n        });\n    }\n\n    this.onChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n    }\n  }\n  render() {\n    const {\n      name,\n      email,\n      phone,\n      address,\n      city,\n      country\n    } = this.state;\n    return ( <\n      form onSubmit = {\n        this.handleSubmit\n      } >\n      <\n      input type = \"text\"\n      name = \"name\"\n      value = {\n        name\n      }\n      placeholder = {\n        'Enter your name'\n      }\n      onChange = {\n        this.onChange\n      }\n      /> <\n      br / >\n      <\n      input type = \"text\"\n      label = \"Email\"\n      name = \"email\"\n      value = {\n        email\n      }\n      placeholder = {\n        'Enter your Email'\n      }\n      onChange = {\n        this.onChange\n      }\n      /> <\n      br / >\n      <\n      input type = \"text\"\n      name = \"phone\"\n      value = {\n        phone\n      }\n      placeholder = {\n        'Enter your phone number'\n      }\n      onChange = {\n        this.onChange\n      }\n      /> <\n      br / >\n      <\n      input type = \"text\"\n      name = \"address\"\n      value = {\n        address\n      }\n      placeholder = {\n        'Enter your Address'\n      }\n      onChange = {\n        this.onChange\n      }\n      /> <\n      br / >\n      <\n      input type = \"text\"\n      name = \"city\"\n      value = {\n        city\n      }\n      placeholder = {\n        'Enter your city'\n      }\n      onChange = {\n        this.onChange\n      }\n      /> <\n      br / >\n      <\n      input type = \"text\"\n      name = \"country\"\n      value = {\n        country\n      }\n      placeholder = {\n        'Enter your country'\n      }\n      onChange = {\n        this.onChange\n      }\n      /> <\n      br / >\n      <\n      button type = \"submit\" > Submit < /button> < /\n      form >\n    );\n  }\n}\nexport default MyForm;\n"]},"metadata":{},"sourceType":"module"}